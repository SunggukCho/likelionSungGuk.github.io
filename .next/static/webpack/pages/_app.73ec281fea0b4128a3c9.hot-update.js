self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./contents/blog/jekyll/2020-12-17-jekyll-Blog에-포스팅-하는법-이미지넣기.md":
/*!***********************************************************************!*\
  !*** ./contents/blog/jekyll/2020-12-17-jekyll-Blog에-포스팅-하는법-이미지넣기.md ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("---\r\ntitle: \"jekyll Blog에 포스팅 하는법-이미지넣기\"\r\ndate: \"2020.12.17\"\r\ntags: \r\n   - blog\r\n   - jekyll\r\n   - jekyll\r\n   - theme\r\n   - NexT theme\r\n   - 지킬 테마\r\n   - 지킬 블로그 포스팅\r\n   - GitHub Pages\r\n---\r\n\r\n## Jekyll Blog Posting Basic\r\n\r\n![image-20201217202444028](/assets/img/image-20201217202444028.png)\r\n\r\nblog posting은 `_post` 폴더 안에 `markdown`문서를 작성하면 됩니다.\r\n\r\n대신 이 때 지켜야할 형식이 있습니다.\r\n\r\n바로 `markdown`문서의 최상단에 아래와 같은 `Yaml` 방식의 코드를 삽입해주는 것입니다.\r\n\r\n아래는 이번 포스팅의 예시를 그대로 사용하였습니다.\r\n\r\n```yaml\r\n---\r\nlayout: post\r\ntitle: jekyll Blog에 포스팅 하는법-이미지넣기\r\ndate: 2020-12-17 17:32:09\r\ncategories: \r\n- jekyll\r\n- blog\r\ntags: [blog, jekyll, blog, jekyll theme, NexT theme, 지킬 테마, 지킬 블로그 포스팅, GitHub Pages]\r\n---- \r\n```\r\n\r\n하나 하나 살펴보면\r\n\r\n1. 위 아래를 세 개의 대시(-)로 막고 그 안에 내용을 작성합니다.\r\n2. `layout`: 레이아웃은 이 글이 어떤 형식인지를 명시합니다. Next theme에서는 archive, post, page, category, tag,  등의 레이아웃이 있습니다. \r\n   이 중에서 포스팅은 `post`를 사용합니다.\r\n3. `title`은 이 포스팅의 제목을 나타냅니다. (추후 자동적으로 해당 markdown 파일 자체의 이름이 됩니다.)\r\n4. `categories`는 이 글의 카테고리를 나타내는 것으로 이 글이 어떻게 분류 되었으면 하는지 희망하는 대로 작성하면 됩니다. 예시의 모습처럼 대시(-) 이후 한 칸 띄고 엔터치는 방식으로도 작성이 가능하고 아래 tags와 같이 배열 형태로 두 가지 형식 모두 작성 가능합니다.\r\n5. `tags`는 이 글에 여러개의 tag를 달아 추후 tag별 구분이 가능하도록 하고 검색엔진에 잘 잡히도록 `SEO`를 도와주기도 합니다. \r\n\r\n\r\n\r\n이 외에도 permalink, date 형식 변경 등 다양한 내용이 있습니다.\r\n\r\n더 자세한 내용은 [**jekyll 공식 사이트**](https://jekyllrb.com/docs/front-matter/)에서 확인하시고 하나씩 테스트해보시면 됩니다.\r\n\r\n\r\n\r\n이후 아래 부분에 평범한 markdown 형식으로 글을 작성하면 됩니다. 이후 Git Push 해주시면 몇 분 후 글이 포스팅 됩니다.\r\n\r\n**만약 온라인에 어떻게 포스팅 될 지 미리 확인해 보고 싶으시다면,**\r\n\r\n1. ``_draft` 폴더를 따로 만들어 온라인 상에서 확인하는 방법\r\n2. `Atom` 에디터를 활용하여 markdown 작성과 동시에 Web에서 보여지는 화면을 보면서 작성\r\n3. `bundle exec jekyll serve`로 로컬 서버로 먼저 돌려서 확인하는 방법\r\n\r\n등 이 있습니다.\r\n\r\n\r\n\r\n## 생각보다 난관인 이미지 넣기\r\n\r\n### 문제상황\r\n\r\n하지만 예전과 같이 `markdown`을 작성하시면서 글 중간 중간 이미지를 업로드 하실 경우, 웹상에서는 이미지가 제대로 뜨지 않는 오류가 심심찮게 발생합니다.\r\n\r\n저의 경우 `Markdown`파일을 `Typora`라는 에디터를 활용해서 작성하는데, 이때 이미지가 자동으로 한 폴더에 모이도록 하는 설정을 활용합니다.\r\n\r\n때문에 `포스팅과 똑같은 이름.assets`라는 폴더가 하나 더 생기게 되고 이때 상대경로로 이미지를 자동으로 찾아오기 때문에 막상 로컬에서는 제대로 동작하는 것처럼 보입니다.\r\n\r\n![image-20201217204513035](/assets/img/image-20201217204513035.png)\r\n\r\n\r\n\r\n그러나, 웹에서 해당 포스팅의 URL이 변경되면서 이 상대경로가 제대로 지정되지 않아 이미지가 불러와지지 않는 오류가 발생합니다.\r\n\r\n![image-20201217204655892](/assets/img/image-20201217204655892.png)\r\n\r\n아래 이미지에서 보듯이 URL에 보시면 `{날짜}`/`{title}`의 형식으로 되어 있는 것을 알 수 있습니다.\r\n\r\n\r\n\r\n### 해결\r\n\r\n이 문제를 해결하는 방법은 생각보다 **간단**하지만, **귀찮은 작업**이 될 수 있습니다.\r\n\r\n해결방법은 `절대경로`를 이용하는 것입니다.\r\n\r\n다시 파일트리를 살펴보면, `assets`폴더가 있습니다.\r\n\r\n![image-20201217205015321](/assets/img/image-20201217205015321.png)\r\n\r\n저의 경우 포스팅에 사용하는 이미지들은 모두 `img`라는 폴더에 넣어두고 해당이미지의 `절대주소`를 마크다운에 링크해두었습니다.\r\n\r\n정리하면, \r\n\r\n1. assets에 img폴더를 만든다\r\n\r\n2. 포스팅에 쓰인 img들을 모두 `/assets/img` 안에 넣는다. (복사 또는 이동)\r\n\r\n3. 포스팅 내에 이미지들의 링크를 모두 다음과 같이 변경한다.\r\n\r\n   ```markdown\r\n   ![Foo](/assets/imge/Foo.jpg)\r\n   ![Bar](/assets/imge/Bar.png)\r\n   ```\r\n\r\n   \r\n\r\n이렇게 처리한 뒤 `git push`해보면 이미지까지 제대로 포스팅 된 것을 확인하실 수 있습니다 :smile:\r\n\r\n\r\n\r\n혹시 참고하셔도 포스팅에 어려움을 겪으신 경우 댓글에 문의해주세요.\r\n\r\n---\r\n\r\nCopyright: likelionSungGuk 조성국");

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29udGVudHMvYmxvZy9qZWt5bGwvMjAyMC0xMi0xNy1qZWt5bGwtQmxvZ+yXkC3tj6zsiqTtjIUt7ZWY64qU67KVLeydtOuvuOyngOuEo+q4sC5tZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsK0RBQWUscTFFQUFxMUUsR0FBRyxJQUFJLE1BQU0sK3ZCQUErdkIsRSIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9wYWdlcy9fYXBwLjczZWMyODFmZWEwYjQxMjhhM2M5LmhvdC11cGRhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIi0tLVxcclxcbnRpdGxlOiBcXFwiamVreWxsIEJsb2fsl5Ag7Y+s7Iqk7YyFIO2VmOuKlOuylS3snbTrr7jsp4DrhKPquLBcXFwiXFxyXFxuZGF0ZTogXFxcIjIwMjAuMTIuMTdcXFwiXFxyXFxudGFnczogXFxyXFxuICAgLSBibG9nXFxyXFxuICAgLSBqZWt5bGxcXHJcXG4gICAtIGpla3lsbFxcclxcbiAgIC0gdGhlbWVcXHJcXG4gICAtIE5leFQgdGhlbWVcXHJcXG4gICAtIOyngO2CrCDthYzrp4hcXHJcXG4gICAtIOyngO2CrCDruJTroZzqt7gg7Y+s7Iqk7YyFXFxyXFxuICAgLSBHaXRIdWIgUGFnZXNcXHJcXG4tLS1cXHJcXG5cXHJcXG4jIyBKZWt5bGwgQmxvZyBQb3N0aW5nIEJhc2ljXFxyXFxuXFxyXFxuIVtpbWFnZS0yMDIwMTIxNzIwMjQ0NDAyOF0oL2Fzc2V0cy9pbWcvaW1hZ2UtMjAyMDEyMTcyMDI0NDQwMjgucG5nKVxcclxcblxcclxcbmJsb2cgcG9zdGluZ+ydgCBgX3Bvc3RgIO2PtOuNlCDslYjsl5AgYG1hcmtkb3duYOusuOyEnOulvCDsnpHshLHtlZjrqbQg65Cp64uI64ukLlxcclxcblxcclxcbuuMgOyLoCDsnbQg65WMIOyngOy8nOyVvO2VoCDtmJXsi53snbQg7J6I7Iq164uI64ukLlxcclxcblxcclxcbuuwlOuhnCBgbWFya2Rvd25g66y47ISc7J2YIOy1nOyDgeuLqOyXkCDslYTrnpjsmYAg6rCZ7J2AIGBZYW1sYCDrsKnsi53snZgg7L2U65Oc66W8IOyCveyehe2VtOyjvOuKlCDqsoPsnoXri4jri6QuXFxyXFxuXFxyXFxu7JWE656Y64qUIOydtOuyiCDtj6zsiqTtjIXsnZgg7JiI7Iuc66W8IOq3uOuMgOuhnCDsgqzsmqntlZjsmIDsirXri4jri6QuXFxyXFxuXFxyXFxuYGBgeWFtbFxcclxcbi0tLVxcclxcbmxheW91dDogcG9zdFxcclxcbnRpdGxlOiBqZWt5bGwgQmxvZ+yXkCDtj6zsiqTtjIUg7ZWY64qU67KVLeydtOuvuOyngOuEo+q4sFxcclxcbmRhdGU6IDIwMjAtMTItMTcgMTc6MzI6MDlcXHJcXG5jYXRlZ29yaWVzOiBcXHJcXG4tIGpla3lsbFxcclxcbi0gYmxvZ1xcclxcbnRhZ3M6IFtibG9nLCBqZWt5bGwsIGJsb2csIGpla3lsbCB0aGVtZSwgTmV4VCB0aGVtZSwg7KeA7YKsIO2FjOuniCwg7KeA7YKsIOu4lOuhnOq3uCDtj6zsiqTtjIUsIEdpdEh1YiBQYWdlc11cXHJcXG4tLS0tIFxcclxcbmBgYFxcclxcblxcclxcbu2VmOuCmCDtlZjrgpgg7IK07Y6067O066m0XFxyXFxuXFxyXFxuMS4g7JyEIOyVhOuemOulvCDshLgg6rCc7J2YIOuMgOyLnCgtKeuhnCDrp4nqs6Ag6re4IOyViOyXkCDrgrTsmqnsnYQg7J6R7ISx7ZWp64uI64ukLlxcclxcbjIuIGBsYXlvdXRgOiDroIjsnbTslYTsm4PsnYAg7J20IOq4gOydtCDslrTrlqQg7ZiV7Iud7J247KeA66W8IOuqheyLnO2VqeuLiOuLpC4gTmV4dCB0aGVtZeyXkOyEnOuKlCBhcmNoaXZlLCBwb3N0LCBwYWdlLCBjYXRlZ29yeSwgdGFnLCAg65Ox7J2YIOugiOydtOyVhOybg+ydtCDsnojsirXri4jri6QuIFxcclxcbiAgIOydtCDspJHsl5DshJwg7Y+s7Iqk7YyF7J2AIGBwb3N0YOulvCDsgqzsmqntlanri4jri6QuXFxyXFxuMy4gYHRpdGxlYOydgCDsnbQg7Y+s7Iqk7YyF7J2YIOygnOuqqeydhCDrgpjtg4Drg4Xri4jri6QuICjstpTtm4Qg7J6Q64+Z7KCB7Jy866GcIO2VtOuLuSBtYXJrZG93biDtjIzsnbwg7J6Q7LK07J2YIOydtOumhOydtCDrkKnri4jri6QuKVxcclxcbjQuIGBjYXRlZ29yaWVzYOuKlCDsnbQg6riA7J2YIOy5tO2FjOqzoOumrOulvCDrgpjtg4DrgrTripQg6rKD7Jy866GcIOydtCDquIDsnbQg7Ja065a76rKMIOu2hOulmCDrkJjsl4jsnLzrqbQg7ZWY64qU7KeAIO2drOunne2VmOuKlCDrjIDroZwg7J6R7ISx7ZWY66m0IOuQqeuLiOuLpC4g7JiI7Iuc7J2YIOuqqOyKteyymOufvCDrjIDsi5woLSkg7J207ZuEIO2VnCDsubgg652E6rOgIOyXlO2EsOy5mOuKlCDrsKnsi53snLzroZzrj4Qg7J6R7ISx7J20IOqwgOuKpe2VmOqzoCDslYTrnpggdGFnc+yZgCDqsJnsnbQg67Cw7Je0IO2Yle2DnOuhnCDrkZAg6rCA7KeAIO2YleyLnSDrqqjrkZAg7J6R7ISxIOqwgOuKpe2VqeuLiOuLpC5cXHJcXG41LiBgdGFnc2DripQg7J20IOq4gOyXkCDsl6zrn6zqsJzsnZggdGFn66W8IOuLrOyVhCDstpTtm4QgdGFn67OEIOq1rOu2hOydtCDqsIDriqXtlZjrj4TroZ0g7ZWY6rOgIOqygOyDieyXlOynhOyXkCDsnpgg7J6h7Z6I64+E66GdIGBTRU9g66W8IOuPhOyZgOyjvOq4sOuPhCDtlanri4jri6QuIFxcclxcblxcclxcblxcclxcblxcclxcbuydtCDsmbjsl5Drj4QgcGVybWFsaW5rLCBkYXRlIO2YleyLnSDrs4Dqsr0g65OxIOuLpOyWke2VnCDrgrTsmqnsnbQg7J6I7Iq164uI64ukLlxcclxcblxcclxcbuuNlCDsnpDshLjtlZwg64K07Jqp7J2AIFsqKmpla3lsbCDqs7Xsi50g7IKs7J207Yq4KipdKGh0dHBzOi8vamVreWxscmIuY29tL2RvY3MvZnJvbnQtbWF0dGVyLynsl5DshJwg7ZmV7J247ZWY7Iuc6rOgIO2VmOuCmOyUqSDthYzsiqTtirjtlbTrs7Tsi5zrqbQg65Cp64uI64ukLlxcclxcblxcclxcblxcclxcblxcclxcbuydtO2bhCDslYTrnpgg67aA67aE7JeQIO2PieuylO2VnCBtYXJrZG93biDtmJXsi53snLzroZwg6riA7J2EIOyekeyEse2VmOuptCDrkKnri4jri6QuIOydtO2bhCBHaXQgUHVzaCDtlbTso7zsi5zrqbQg66qHIOu2hCDtm4Qg6riA7J20IO2PrOyKpO2MhSDrkKnri4jri6QuXFxyXFxuXFxyXFxuKirrp4zslb0g7Jio65287J247JeQIOyWtOuWu+qyjCDtj6zsiqTtjIUg65CgIOyngCDrr7jrpqwg7ZmV7J247ZW0IOuztOqzoCDsi7bsnLzsi5zri6TrqbQsKipcXHJcXG5cXHJcXG4xLiBgYF9kcmFmdGAg7Y+0642U66W8IOuUsOuhnCDrp4zrk6TslrQg7Jio65287J24IOyDgeyXkOyEnCDtmZXsnbjtlZjripQg67Cp67KVXFxyXFxuMi4gYEF0b21gIOyXkOuUlO2EsOulvCDtmZzsmqntlZjsl6wgbWFya2Rvd24g7J6R7ISx6rO8IOuPmeyLnOyXkCBXZWLsl5DshJwg67O07Jes7KeA64qUIO2ZlOuptOydhCDrs7TrqbTshJwg7J6R7ISxXFxyXFxuMy4gYGJ1bmRsZSBleGVjIGpla3lsbCBzZXJ2ZWDroZwg66Gc7LusIOyEnOuyhOuhnCDrqLzsoIAg64+M66Ck7IScIO2ZleyduO2VmOuKlCDrsKnrspVcXHJcXG5cXHJcXG7rk7Eg7J20IOyeiOyKteuLiOuLpC5cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4jIyDsg53qsIHrs7Tri6Qg64Kc6rSA7J24IOydtOuvuOyngCDrhKPquLBcXHJcXG5cXHJcXG4jIyMg66y47KCc7IOB7ZmpXFxyXFxuXFxyXFxu7ZWY7KeA66eMIOyYiOyghOqzvCDqsJnsnbQgYG1hcmtkb3duYOydhCDsnpHshLHtlZjsi5zrqbTshJwg6riAIOykkeqwhCDspJHqsIQg7J2066+47KeA66W8IOyXheuhnOuTnCDtlZjsi6Qg6rK97JqwLCDsm7nsg4Hsl5DshJzripQg7J2066+47KeA6rCAIOygnOuMgOuhnCDrnKjsp4Ag7JWK64qUIOyYpOulmOqwgCDsi6zsi6zssK7qsowg67Cc7IOd7ZWp64uI64ukLlxcclxcblxcclxcbuyggOydmCDqsr3smrAgYE1hcmtkb3duYO2MjOydvOydhCBgVHlwb3JhYOudvOuKlCDsl5DrlJTthLDrpbwg7Zmc7Jqp7ZW07IScIOyekeyEse2VmOuKlOuNsCwg7J2065WMIOydtOuvuOyngOqwgCDsnpDrj5nsnLzroZwg7ZWcIO2PtOuNlOyXkCDrqqjsnbTrj4TroZ0g7ZWY64qUIOyEpOygleydhCDtmZzsmqntlanri4jri6QuXFxyXFxuXFxyXFxu65WM66y47JeQIGDtj6zsiqTtjIXqs7wg65iR6rCZ7J2AIOydtOumhC5hc3NldHNg652864qUIO2PtOuNlOqwgCDtlZjrgpgg642UIOyDneq4sOqyjCDrkJjqs6Ag7J2065WMIOyDgeuMgOqyveuhnOuhnCDsnbTrr7jsp4Drpbwg7J6Q64+Z7Jy866GcIOywvuyVhOyYpOq4sCDrlYzrrLjsl5Ag66eJ7IOBIOuhnOy7rOyXkOyEnOuKlCDsoJzrjIDroZwg64+Z7J6R7ZWY64qUIOqyg+yymOufvCDrs7TsnoXri4jri6QuXFxyXFxuXFxyXFxuIVtpbWFnZS0yMDIwMTIxNzIwNDUxMzAzNV0oL2Fzc2V0cy9pbWcvaW1hZ2UtMjAyMDEyMTcyMDQ1MTMwMzUucG5nKVxcclxcblxcclxcblxcclxcblxcclxcbuq3uOufrOuCmCwg7Ju57JeQ7IScIO2VtOuLuSDtj6zsiqTtjIXsnZggVVJM7J20IOuzgOqyveuQmOuptOyEnCDsnbQg7IOB64yA6rK966Gc6rCAIOygnOuMgOuhnCDsp4DsoJXrkJjsp4Ag7JWK7JWEIOydtOuvuOyngOqwgCDrtojrn6zsmYDsp4Dsp4Ag7JWK64qUIOyYpOulmOqwgCDrsJzsg53tlanri4jri6QuXFxyXFxuXFxyXFxuIVtpbWFnZS0yMDIwMTIxNzIwNDY1NTg5Ml0oL2Fzc2V0cy9pbWcvaW1hZ2UtMjAyMDEyMTcyMDQ2NTU4OTIucG5nKVxcclxcblxcclxcbuyVhOuemCDsnbTrr7jsp4Dsl5DshJwg67O065Ov7J20IFVSTOyXkCDrs7Tsi5zrqbQgYHvrgqDsp5x9YC9ge3RpdGxlfWDsnZgg7ZiV7Iud7Jy866GcIOuQmOyWtCDsnojripQg6rKD7J2EIOyVjCDsiJgg7J6I7Iq164uI64ukLlxcclxcblxcclxcblxcclxcblxcclxcbiMjIyDtlbTqsrBcXHJcXG5cXHJcXG7snbQg66y47KCc66W8IO2VtOqysO2VmOuKlCDrsKnrspXsnYAg7IOd6rCB67O064ukICoq6rCE64uoKirtlZjsp4Drp4wsICoq6reA7LCu7J2AIOyekeyXhSoq7J20IOuQoCDsiJgg7J6I7Iq164uI64ukLlxcclxcblxcclxcbu2VtOqysOuwqeuyleydgCBg7KCI64yA6rK966GcYOulvCDsnbTsmqntlZjripQg6rKD7J6F64uI64ukLlxcclxcblxcclxcbuuLpOyLnCDtjIzsnbztirjrpqzrpbwg7IK07Y6067O066m0LCBgYXNzZXRzYO2PtOuNlOqwgCDsnojsirXri4jri6QuXFxyXFxuXFxyXFxuIVtpbWFnZS0yMDIwMTIxNzIwNTAxNTMyMV0oL2Fzc2V0cy9pbWcvaW1hZ2UtMjAyMDEyMTcyMDUwMTUzMjEucG5nKVxcclxcblxcclxcbuyggOydmCDqsr3smrAg7Y+s7Iqk7YyF7JeQIOyCrOyaqe2VmOuKlCDsnbTrr7jsp4Drk6TsnYAg66qo65GQIGBpbWdg652864qUIO2PtOuNlOyXkCDrhKPslrTrkZDqs6Ag7ZW064u57J2066+47KeA7J2YIGDsoIjrjIDso7zshoxg66W8IOuniO2BrOuLpOyatOyXkCDrp4HtgaztlbTrkZDsl4jsirXri4jri6QuXFxyXFxuXFxyXFxu7KCV66as7ZWY66m0LCBcXHJcXG5cXHJcXG4xLiBhc3NldHPsl5AgaW1n7Y+0642U66W8IOunjOuToOuLpFxcclxcblxcclxcbjIuIO2PrOyKpO2MheyXkCDsk7DsnbggaW1n65Ok7J2EIOuqqOuRkCBgL2Fzc2V0cy9pbWdgIOyViOyXkCDrhKPripTri6QuICjrs7Xsgqwg65iQ64qUIOydtOuPmSlcXHJcXG5cXHJcXG4zLiDtj6zsiqTtjIUg64K07JeQIOydtOuvuOyngOuTpOydmCDrp4Htgazrpbwg66qo65GQIOuLpOydjOqzvCDqsJnsnbQg67OA6rK97ZWc64ukLlxcclxcblxcclxcbiAgIGBgYG1hcmtkb3duXFxyXFxuICAgIVtGb29dKC9hc3NldHMvaW1nZS9Gb28uanBnKVxcclxcbiAgICFbQmFyXSgvYXNzZXRzL2ltZ2UvQmFyLnBuZylcXHJcXG4gICBgYGBcXHJcXG5cXHJcXG4gICBcXHJcXG5cXHJcXG7snbTroIfqsowg7LKY66as7ZWcIOuSpCBgZ2l0IHB1c2hg7ZW067O066m0IOydtOuvuOyngOq5jOyngCDsoJzrjIDroZwg7Y+s7Iqk7YyFIOuQnCDqsoPsnYQg7ZmV7J247ZWY7IukIOyImCDsnojsirXri4jri6QgOnNtaWxlOlxcclxcblxcclxcblxcclxcblxcclxcbu2YueyLnCDssLjqs6DtlZjshZTrj4Qg7Y+s7Iqk7YyF7JeQIOyWtOugpOybgOydhCDqsqrsnLzsi6Ag6rK97JqwIOuMk+q4gOyXkCDrrLjsnZjtlbTso7zshLjsmpQuXFxyXFxuXFxyXFxuLS0tXFxyXFxuXFxyXFxuQ29weXJpZ2h0OiBsaWtlbGlvblN1bmdHdWsg7KGw7ISx6rWtXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./contents/blog/language/typescript/2021-04-27-Typescript-실습퀴즈.md":
/*!*************************************************************************!*\
  !*** ./contents/blog/language/typescript/2021-04-27-Typescript-실습퀴즈.md ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("---\r\ntitle: \"타입스크립트 실습 QUIZ\"\r\ndate: \"2021.04.28\"\r\ntags: \r\n  - typescript\r\n  - quiz\r\n---\r\n# 나를 위해 내가 직접 만든 QUIZ\r\n\r\n## Q1. 다음 빈칸에 들어갈 알맞은 것은?\r\n\r\n```jsx\r\nfunction joinStudy(name: string, age: number): ( 빈칸 ) {\r\n  if (age > 23) {\r\n    console.log(name)\r\n  }\r\n}\r\njoinStudy('John Doe', 35)\r\n```\r\n\r\n\r\n\r\n## Q2. 아래 arr는 숫자로 이루어진 배열이고 수정이 불가능하다. 이때 빈칸에 들어갈 것으로 가장 알맞은 것은?\r\n\r\n```jsx\r\nlet arr: (      빈칸     ) = [1,2,3];\r\n```\r\n\r\n\r\n\r\n## Q3. OX퀴즈\r\n\r\n- (   ) 클래스끼리는 상속이 가능하지만 인터페이스간에는 상속이 불가능하다.\r\n- (   ) enum은 javascript로 컴파일 된 후에도 남아있다.\r\n\r\n\r\n\r\n## Q4. 다음중 Capt 타입은 어떤 모습인가?\r\n\r\n```jsx\r\ninterface Person {\r\n  name: string;\r\n  age: number;\r\n}\r\ninterface Developer {\r\n  name: string;\r\n  skill: number;\r\n}\r\ntype Capt = Person & Developer;\r\n\r\n```\r\n\r\n```jsx\r\n// Capt타입\r\n{\r\n\t// 여기에 답안을 작성해주세요.\r\n\t\r\n\t\r\n}\r\n```\r\n\r\n\r\n\r\n## Q5. 다음 빈칸에 들어갈 수 있는 것을 모두 작성해주세요.\r\n\r\n```jsx\r\ninterface Animal{\r\n  name: string;\r\n\tage: number,\r\n  move: number;\r\n}\r\ninterface Bird{\r\n  name: string;\r\n\tage: number;\r\n  fly: string;\r\n}\r\nfunction hawk(sth: Animal & Bird) {\r\n // 여기에 답안을 작성해주세요.\r\n}\r\n```\r\n\r\n\r\n\r\n## Q6. 다음 코드가 console에 출력되는 결과는 무엇일까요?\r\n\r\n```jsx\r\nclass Animal {\r\n    name: string;\r\n    constructor(theName: string) { this.name = theName; }\r\n    move(distanceInMeters: number = 0) {\r\n        console.log(`${this.name} moved ${distanceInMeters}m.`);\r\n    }\r\n}\r\n\r\nclass Snake extends Animal {\r\n    constructor(name: string) { super(name); }\r\n    move(distanceInMeters = 5) {\r\n        console.log(\"Slithering...\");\r\n        super.move(distanceInMeters);\r\n    }\r\n}\r\n\r\nclass Horse extends Animal {\r\n    constructor(name: string) { super(name); }\r\n    move(distanceInMeters = 45) {\r\n        console.log(\"Galloping...\");\r\n        super.move(distanceInMeters);\r\n    }\r\n}\r\n\r\nlet sam = new Snake(\"Sammy the Python\");\r\nlet tom: Animal = new Horse(\"Tommy the Palomino\");\r\n\r\nsam.move();\r\ntom.move(34);\r\n```\r\n\r\n```jsx\r\n//답안\r\n\r\n```\r\n\r\n\r\n\r\n## Q7. 타입스크립트에서 어떠한 클래스 혹은 함수에서 사용할 타입을 그 함수나 클래스를 사용할 때 결정하는 프로그래밍 기법은?\r\n\r\n- \r\n\r\n\r\n\r\n## Q8-1. 다음 두 가지 방법 중 어떤 방법이 컴포넌트 재사용성을 높일 수 있는 방법이라고 생각하는가? 그리고 그 이유는 무엇인가?\r\n\r\n```jsx\r\n// 1번\r\nclass Stack {\r\n  private data: any[] = [];\r\n\r\n  contructor() {}\r\n\r\n  push(item: any): void {\r\n    this.data.push(item);\r\n  }\r\n\r\n  pop(): any {\r\n    return this.data.pop();\r\n  }\r\n}\r\n```\r\n\r\n```jsx\r\n// 2번\r\n\r\nclass Stack<T> {\r\n  private data: T[] = [];\r\n\r\n  constructor() {}\r\n\r\n  push(item: T): void {\r\n    this.data.push(item);\r\n  }\r\n\r\n  pop() {\r\n    return this.data.pop();\r\n  }\r\n}\r\n```\r\n\r\n- \r\n\r\n\r\n\r\n## 08-2. 마지막 로그에 찍히는 numberStack과 stringStack의 데이터를 표기하시오.\r\n\r\n```jsx\r\nclass Stack<T> {\r\n  private data: T[] = [];\r\n\r\n  constructor() {}\r\n\r\n  push(item: T): void {\r\n    this.data.push(item);\r\n  }\r\n\r\n  pop() {\r\n    return this.data.pop();\r\n  }\r\n}\r\n\r\nconst numberStack = new Stack<number>();\r\nconst stringStack = new Stack<string>();\r\nnumberStack.push(1);\r\nnumberStack.push(2);\r\nnumberStack.push(3);\r\nstringStack.push('a');\r\nstringStack.push('b');\r\nnumberStack.pop();\r\nstringStack.pop();\r\nconsole.log(numberStack);\r\nconsole.log(stringStack);\r\n```\r\n\r\n```jsx\r\n// stringStack\r\n\"data\": [\r\n\r\n]\r\n\r\n// numberStack\r\n\"data\": [\r\n\r\n]\r\n```\r\n\r\n\r\n\r\n### 퀴즈에 대한 해설은 아래 노션 링크에서 확인할 수 있습니다!\r\n\r\n[퀴즈 답안 보러가기](https://www.notion.so/Typescript-7b44163f91fc411e978ecc0c3f527173)\r\n\r\n---\r\n\r\nReferences.\r\n\r\nhttps://typescript-kr.github.io/\r\n\r\nhttps://joshua1988.github.io/ts/");

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29udGVudHMvYmxvZy9sYW5ndWFnZS90eXBlc2NyaXB0LzIwMjEtMDQtMjctVHlwZXNjcmlwdC3si6TsirXtgLTspogubWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLCtEQUFlLDJPQUEyTyxxQkFBcUIsZ0NBQWdDLEtBQUssMEtBQTBLLG1OQUFtTixtQkFBbUIsa0JBQWtCLEtBQUsseUJBQXlCLG1CQUFtQixvQkFBb0IsS0FBSyxtQ0FBbUMsMkNBQTJDLHlDQUF5Qyw4RkFBOEYsbUJBQW1CLHFDQUFxQyxLQUFLLG1CQUFtQixtQkFBbUIsa0JBQWtCLGtCQUFrQixLQUFLLHVDQUF1Qyw0QkFBNEIsNkZBQTZGLHFCQUFxQixzQ0FBc0MscUJBQXFCLEVBQUUsNENBQTRDLDJCQUEyQixVQUFVLFNBQVMsaUJBQWlCLEtBQUssU0FBUyxLQUFLLG9DQUFvQyxtQ0FBbUMsYUFBYSxFQUFFLG9DQUFvQywyQ0FBMkMseUNBQXlDLFNBQVMsS0FBSyxvQ0FBb0MsbUNBQW1DLGFBQWEsRUFBRSxxQ0FBcUMsMENBQTBDLHlDQUF5QyxTQUFTLEtBQUssa0RBQWtELHdEQUF3RCxtQkFBbUIsaUJBQWlCLDhRQUE4USwrQkFBK0IseUJBQXlCLGlDQUFpQyw2QkFBNkIsT0FBTyxzQkFBc0IsK0JBQStCLE9BQU8sS0FBSyxzREFBc0QsNkJBQTZCLDBCQUEwQiwrQkFBK0IsNkJBQTZCLE9BQU8saUJBQWlCLCtCQUErQixPQUFPLEtBQUssNkhBQTZILDZCQUE2QiwwQkFBMEIsK0JBQStCLDZCQUE2QixPQUFPLGlCQUFpQiwrQkFBK0IsT0FBTyxLQUFLLGdEQUFnRCw0Q0FBNEMsd0JBQXdCLHdCQUF3Qix3QkFBd0IsMEJBQTBCLDBCQUEwQixzQkFBc0Isc0JBQXNCLDZCQUE2Qiw2QkFBNkIsK1dBQStXLEUiLCJmaWxlIjoic3RhdGljL3dlYnBhY2svcGFnZXMvX2FwcC5iNTI1YWUyOTFjNjNkMmM0NWI4My5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCItLS1cXHJcXG50aXRsZTogXFxcIu2DgOyeheyKpO2BrOumve2KuCDsi6TsirUgUVVJWlxcXCJcXHJcXG5kYXRlOiBcXFwiMjAyMS4wNC4yOFxcXCJcXHJcXG50YWdzOiBcXHJcXG4gIC0gdHlwZXNjcmlwdFxcclxcbiAgLSBxdWl6XFxyXFxuLS0tXFxyXFxuIyDrgpjrpbwg7JyE7ZW0IOuCtOqwgCDsp4HsoJEg66eM65OgIFFVSVpcXHJcXG5cXHJcXG4jIyBRMS4g64uk7J2MIOu5iOy5uOyXkCDrk6TslrTqsIgg7JWM66ee7J2AIOqyg+ydgD9cXHJcXG5cXHJcXG5gYGBqc3hcXHJcXG5mdW5jdGlvbiBqb2luU3R1ZHkobmFtZTogc3RyaW5nLCBhZ2U6IG51bWJlcik6ICgg67mI7Lm4ICkge1xcclxcbiAgaWYgKGFnZSA+IDIzKSB7XFxyXFxuICAgIGNvbnNvbGUubG9nKG5hbWUpXFxyXFxuICB9XFxyXFxufVxcclxcbmpvaW5TdHVkeSgnSm9obiBEb2UnLCAzNSlcXHJcXG5gYGBcXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4jIyBRMi4g7JWE656YIGFycuuKlCDsiKvsnpDroZwg7J2066Oo7Ja07KeEIOuwsOyXtOydtOqzoCDsiJjsoJXsnbQg67aI6rCA64ql7ZWY64ukLiDsnbTrlYwg67mI7Lm47JeQIOuTpOyWtOqwiCDqsoPsnLzroZwg6rCA7J6lIOyVjOunnuydgCDqsoPsnYA/XFxyXFxuXFxyXFxuYGBganN4XFxyXFxubGV0IGFycjogKCAgICAgIOu5iOy5uCAgICAgKSA9IFsxLDIsM107XFxyXFxuYGBgXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuIyMgUTMuIE9Y7YC07KaIXFxyXFxuXFxyXFxuLSAoICAgKSDtgbTrnpjsiqTrgbzrpqzripQg7IOB7IaN7J20IOqwgOuKpe2VmOyngOunjCDsnbjthLDtjpjsnbTsiqTqsITsl5DripQg7IOB7IaN7J20IOu2iOqwgOuKpe2VmOuLpC5cXHJcXG4tICggICApIGVudW3snYAgamF2YXNjcmlwdOuhnCDsu7TtjIzsnbwg65CcIO2bhOyXkOuPhCDrgqjslYTsnojri6QuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuIyMgUTQuIOuLpOydjOykkSBDYXB0IO2DgOyeheydgCDslrTrlqQg66qo7Iq17J246rCAP1xcclxcblxcclxcbmBgYGpzeFxcclxcbmludGVyZmFjZSBQZXJzb24ge1xcclxcbiAgbmFtZTogc3RyaW5nO1xcclxcbiAgYWdlOiBudW1iZXI7XFxyXFxufVxcclxcbmludGVyZmFjZSBEZXZlbG9wZXIge1xcclxcbiAgbmFtZTogc3RyaW5nO1xcclxcbiAgc2tpbGw6IG51bWJlcjtcXHJcXG59XFxyXFxudHlwZSBDYXB0ID0gUGVyc29uICYgRGV2ZWxvcGVyO1xcclxcblxcclxcbmBgYFxcclxcblxcclxcbmBgYGpzeFxcclxcbi8vIENhcHTtg4DsnoVcXHJcXG57XFxyXFxuXFx0Ly8g7Jes6riw7JeQIOuLteyViOydhCDsnpHshLHtlbTso7zshLjsmpQuXFxyXFxuXFx0XFxyXFxuXFx0XFxyXFxufVxcclxcbmBgYFxcclxcblxcclxcblxcclxcblxcclxcbiMjIFE1LiDri6TsnYwg67mI7Lm47JeQIOuTpOyWtOqwiCDsiJgg7J6I64qUIOqyg+ydhCDrqqjrkZAg7J6R7ISx7ZW07KO87IS47JqULlxcclxcblxcclxcbmBgYGpzeFxcclxcbmludGVyZmFjZSBBbmltYWx7XFxyXFxuICBuYW1lOiBzdHJpbmc7XFxyXFxuXFx0YWdlOiBudW1iZXIsXFxyXFxuICBtb3ZlOiBudW1iZXI7XFxyXFxufVxcclxcbmludGVyZmFjZSBCaXJke1xcclxcbiAgbmFtZTogc3RyaW5nO1xcclxcblxcdGFnZTogbnVtYmVyO1xcclxcbiAgZmx5OiBzdHJpbmc7XFxyXFxufVxcclxcbmZ1bmN0aW9uIGhhd2soc3RoOiBBbmltYWwgJiBCaXJkKSB7XFxyXFxuIC8vIOyXrOq4sOyXkCDri7XslYjsnYQg7J6R7ISx7ZW07KO87IS47JqULlxcclxcbn1cXHJcXG5gYGBcXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4jIyBRNi4g64uk7J2MIOy9lOuTnOqwgCBjb25zb2xl7JeQIOy2nOugpeuQmOuKlCDqsrDqs7zripQg66y07JeH7J286rmM7JqUP1xcclxcblxcclxcbmBgYGpzeFxcclxcbmNsYXNzIEFuaW1hbCB7XFxyXFxuICAgIG5hbWU6IHN0cmluZztcXHJcXG4gICAgY29uc3RydWN0b3IodGhlTmFtZTogc3RyaW5nKSB7IHRoaXMubmFtZSA9IHRoZU5hbWU7IH1cXHJcXG4gICAgbW92ZShkaXN0YW5jZUluTWV0ZXJzOiBudW1iZXIgPSAwKSB7XFxyXFxuICAgICAgICBjb25zb2xlLmxvZyhgJHt0aGlzLm5hbWV9IG1vdmVkICR7ZGlzdGFuY2VJbk1ldGVyc31tLmApO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbmNsYXNzIFNuYWtlIGV4dGVuZHMgQW5pbWFsIHtcXHJcXG4gICAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nKSB7IHN1cGVyKG5hbWUpOyB9XFxyXFxuICAgIG1vdmUoZGlzdGFuY2VJbk1ldGVycyA9IDUpIHtcXHJcXG4gICAgICAgIGNvbnNvbGUubG9nKFxcXCJTbGl0aGVyaW5nLi4uXFxcIik7XFxyXFxuICAgICAgICBzdXBlci5tb3ZlKGRpc3RhbmNlSW5NZXRlcnMpO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbmNsYXNzIEhvcnNlIGV4dGVuZHMgQW5pbWFsIHtcXHJcXG4gICAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nKSB7IHN1cGVyKG5hbWUpOyB9XFxyXFxuICAgIG1vdmUoZGlzdGFuY2VJbk1ldGVycyA9IDQ1KSB7XFxyXFxuICAgICAgICBjb25zb2xlLmxvZyhcXFwiR2FsbG9waW5nLi4uXFxcIik7XFxyXFxuICAgICAgICBzdXBlci5tb3ZlKGRpc3RhbmNlSW5NZXRlcnMpO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbmxldCBzYW0gPSBuZXcgU25ha2UoXFxcIlNhbW15IHRoZSBQeXRob25cXFwiKTtcXHJcXG5sZXQgdG9tOiBBbmltYWwgPSBuZXcgSG9yc2UoXFxcIlRvbW15IHRoZSBQYWxvbWlub1xcXCIpO1xcclxcblxcclxcbnNhbS5tb3ZlKCk7XFxyXFxudG9tLm1vdmUoMzQpO1xcclxcbmBgYFxcclxcblxcclxcbmBgYGpzeFxcclxcbi8v64u17JWIXFxyXFxuXFxyXFxuYGBgXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuIyMgUTcuIO2DgOyeheyKpO2BrOumve2KuOyXkOyEnCDslrTrlqDtlZwg7YG0656Y7IqkIO2YueydgCDtlajsiJjsl5DshJwg7IKs7Jqp7ZWgIO2DgOyeheydhCDqt7gg7ZWo7IiY64KYIO2BtOuemOyKpOulvCDsgqzsmqntlaAg65WMIOqysOygle2VmOuKlCDtlITroZzqt7jrnpjrsI0g6riw67KV7J2AP1xcclxcblxcclxcbi0gXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuIyMgUTgtMS4g64uk7J2MIOuRkCDqsIDsp4Ag67Cp67KVIOykkSDslrTrlqQg67Cp67KV7J20IOy7tO2PrOuEjO2KuCDsnqzsgqzsmqnshLHsnYQg64aS7J28IOyImCDsnojripQg67Cp67KV7J2065286rOgIOyDneqwge2VmOuKlOqwgD8g6re466as6rOgIOq3uCDsnbTsnKDripQg66y07JeH7J246rCAP1xcclxcblxcclxcbmBgYGpzeFxcclxcbi8vIDHrsohcXHJcXG5jbGFzcyBTdGFjayB7XFxyXFxuICBwcml2YXRlIGRhdGE6IGFueVtdID0gW107XFxyXFxuXFxyXFxuICBjb250cnVjdG9yKCkge31cXHJcXG5cXHJcXG4gIHB1c2goaXRlbTogYW55KTogdm9pZCB7XFxyXFxuICAgIHRoaXMuZGF0YS5wdXNoKGl0ZW0pO1xcclxcbiAgfVxcclxcblxcclxcbiAgcG9wKCk6IGFueSB7XFxyXFxuICAgIHJldHVybiB0aGlzLmRhdGEucG9wKCk7XFxyXFxuICB9XFxyXFxufVxcclxcbmBgYFxcclxcblxcclxcbmBgYGpzeFxcclxcbi8vIDLrsohcXHJcXG5cXHJcXG5jbGFzcyBTdGFjazxUPiB7XFxyXFxuICBwcml2YXRlIGRhdGE6IFRbXSA9IFtdO1xcclxcblxcclxcbiAgY29uc3RydWN0b3IoKSB7fVxcclxcblxcclxcbiAgcHVzaChpdGVtOiBUKTogdm9pZCB7XFxyXFxuICAgIHRoaXMuZGF0YS5wdXNoKGl0ZW0pO1xcclxcbiAgfVxcclxcblxcclxcbiAgcG9wKCkge1xcclxcbiAgICByZXR1cm4gdGhpcy5kYXRhLnBvcCgpO1xcclxcbiAgfVxcclxcbn1cXHJcXG5gYGBcXHJcXG5cXHJcXG4tIFxcclxcblxcclxcblxcclxcblxcclxcbiMjIDA4LTIuIOuniOyngOuniSDroZzqt7jsl5Ag7LCN7Z6I64qUIG51bWJlclN0YWNr6rO8IHN0cmluZ1N0YWNr7J2YIOuNsOydtO2EsOulvCDtkZzquLDtlZjsi5zsmKQuXFxyXFxuXFxyXFxuYGBganN4XFxyXFxuY2xhc3MgU3RhY2s8VD4ge1xcclxcbiAgcHJpdmF0ZSBkYXRhOiBUW10gPSBbXTtcXHJcXG5cXHJcXG4gIGNvbnN0cnVjdG9yKCkge31cXHJcXG5cXHJcXG4gIHB1c2goaXRlbTogVCk6IHZvaWQge1xcclxcbiAgICB0aGlzLmRhdGEucHVzaChpdGVtKTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIHBvcCgpIHtcXHJcXG4gICAgcmV0dXJuIHRoaXMuZGF0YS5wb3AoKTtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuY29uc3QgbnVtYmVyU3RhY2sgPSBuZXcgU3RhY2s8bnVtYmVyPigpO1xcclxcbmNvbnN0IHN0cmluZ1N0YWNrID0gbmV3IFN0YWNrPHN0cmluZz4oKTtcXHJcXG5udW1iZXJTdGFjay5wdXNoKDEpO1xcclxcbm51bWJlclN0YWNrLnB1c2goMik7XFxyXFxubnVtYmVyU3RhY2sucHVzaCgzKTtcXHJcXG5zdHJpbmdTdGFjay5wdXNoKCdhJyk7XFxyXFxuc3RyaW5nU3RhY2sucHVzaCgnYicpO1xcclxcbm51bWJlclN0YWNrLnBvcCgpO1xcclxcbnN0cmluZ1N0YWNrLnBvcCgpO1xcclxcbmNvbnNvbGUubG9nKG51bWJlclN0YWNrKTtcXHJcXG5jb25zb2xlLmxvZyhzdHJpbmdTdGFjayk7XFxyXFxuYGBgXFxyXFxuXFxyXFxuYGBganN4XFxyXFxuLy8gc3RyaW5nU3RhY2tcXHJcXG5cXFwiZGF0YVxcXCI6IFtcXHJcXG5cXHJcXG5dXFxyXFxuXFxyXFxuLy8gbnVtYmVyU3RhY2tcXHJcXG5cXFwiZGF0YVxcXCI6IFtcXHJcXG5cXHJcXG5dXFxyXFxuYGBgXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuIyMjIO2AtOymiOyXkCDrjIDtlZwg7ZW07ISk7J2AIOyVhOuemCDrhbjshZgg66eB7YGs7JeQ7IScIO2ZleyduO2VoCDsiJgg7J6I7Iq164uI64ukIVxcclxcblxcclxcblvtgLTspogg64u17JWIIOuztOufrOqwgOq4sF0oaHR0cHM6Ly93d3cubm90aW9uLnNvL1R5cGVzY3JpcHQtN2I0NDE2M2Y5MWZjNDExZTk3OGVjYzBjM2Y1MjcxNzMpXFxyXFxuXFxyXFxuLS0tXFxyXFxuXFxyXFxuUmVmZXJlbmNlcy5cXHJcXG5cXHJcXG5odHRwczovL3R5cGVzY3JpcHQta3IuZ2l0aHViLmlvL1xcclxcblxcclxcbmh0dHBzOi8vam9zaHVhMTk4OC5naXRodWIuaW8vdHMvXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==
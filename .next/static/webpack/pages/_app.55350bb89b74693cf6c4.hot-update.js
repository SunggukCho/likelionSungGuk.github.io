self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./contents/blog/frontend/2020-12-16-개발자를 괴롭히지만 없어서는 안되는 CORS.md":
/*!***********************************************************************!*\
  !*** ./contents/blog/frontend/2020-12-16-개발자를 괴롭히지만 없어서는 안되는 CORS.md ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("---\r\ntitle: \"개발자를 괴롭히지만 없어서는 안되는 CORS\"\r\ndate: \"2020.12.16\"\r\ntags:\r\n  - CORS\r\n  - SOP\r\n  - 네트워크\r\n---\r\n\r\n\r\n\r\n# Cross-Origin Resource Sharing, CORS\r\n\r\n> 이 포스팅은 같이 스터디 했던 팀원 신상훈님의 포스팅을 기반으로 약간의 편집만을 더했습니다.\r\n\r\n\r\n\r\n## 0. CORS를 이해하기 위한 배경\r\n\r\n**CORS는 웹 개발자라면 한 번쯤은 마주하게 될 정책입니다.**\r\n\r\nMozilla의 MDN 에서는 CORS를 아래와 같이 설명하고 있습니다.\r\n\r\n> `교차 출처 리소스 공유`는 추가 `HTTP 헤더`를 사용하여, 한 `출처`에서 실행 중인 웹 애플리케이션이 다른 출처의 선택한 자원에 접근할 수 있는 권한을 부여하도록 브라우저에 알려주는 체제입니다. 웹 애플리케이션은 리소스가 자신의 출처(도메인, 프로토콜, 포트)와 다를 때 교차 출처 HTTP 요청을 실행합니다.\r\n\r\n> 쉽게 말해 교차 출처 자원 공유는 웹 페이지 상의 제한된 리소스를 최초 자원이 서비스된 도메인 밖의 다른 도메인으로부터 요청할 수 있게 허용하는 구조입니다. CORS는 교차 출처 요청을 허용하는 것이 안전한지 아닌지를 판별하기 위해 브라우저와 서버가 상호 통신하는 하나의 방법을 정의합니다.\r\n\r\n### 0.1 시작 전 집고 넘어갈 점\r\n\r\n- CORS를 직역하니 `Cross-Origin` 을 `교차 출처` 로 해석되었는데 `\"다른 출처\"` 로 생각하는게 이해에 도움이 된다.\r\n- 즉 CORS 는 `다른 출처간의 리소스 공유` 라는 의미 !\r\n\r\n---\r\n\r\n\r\n\r\n## 1. 같은 출처, 다른 출처는 무엇을 기준으로 나뉘는가?\r\n\r\n### 1.1 출처(Origin)\r\n\r\n\r\n **서버의 위치를 의미하는 URL은 여러 개의 구성 요소로 이루어져 있습니다.**\r\n\r\n![](/assets/img/sources.JPG)\r\n\r\n- 출처는 위 그림과 같이 `Protocol` 과 `Host` 등, 그리고 그림에 없는 `:443` 과 같은 포트 번호까지 모두 합친 것을 의미합니다. 즉, 서버의 위치를 찾아가기 위해 필요한 가장 기본적인 것들을 합쳐놓은 것이죠\r\n\r\n- 출처 내의 포트 번호는 생략이 가능한데, 이는 각 웹에서 사용하는 `HTTP`, `HTTPS` 프로토콜의 기본 포트 번호가 정해져 있기 때문입니다. (지난 포스팅에도 언급했듯이 기본적으로 80포트를 쓰고 이때는 생략 가능함.)\r\n- 그러나, 만약 `https://google.com:443` 과 같이 출처에 포트 번호가 명시적으로 포함된다면, 이 포트 번호까지 모두 일치해야 같은 출처라고 인정됩니다.\r\n  - (그런데 이 케이스에 대한 명확한 정의가 표준으로 정해진 것은 아니어서, 어떤 경우에는 다른 출처로 판단될 수도 있다는게 함정)\r\n\r\n---\r\n\r\n\r\n\r\n### 1.2 SOP(Same-Origin Policy) 동일출처 정책\r\n\r\n\r\n\r\n**웹 세계에서 다른 출처로의 리소스 요청을 제한하는 것과 관련된 정책은 두 가지인데, 한 가지는 앞서 소개한 CORS, 나머지 한 가지가 `SOP` 입니다.**\r\n\r\n**SOP의 의미 : \"같은 출처에서만 리소스를 공유할 수 있다\" 인데,** 즉 이 동일 출처 정책은 한 도메인의 JavaScript 코드를 불러오면 해당 코드 안에서 다른 도메인의 데이터를 요청할 수 없다는 것을 의미합니다. \r\n\r\n**따라서 CORS와는 반대되는 의미로 보이지만 기본적으로 CORS또한 SOP의 일환으로 `적어도 이정도는 지키면서 교차출처 요청을 해라!` 이해하시면 됩니다.**\r\n\r\n대표적으로 `XMLHttpRequest`와 [Fetch API](https://developer.mozilla.org/ko/docs/Web/API/Fetch_API)는 동일출처정책(SOP)을 따릅니다.\r\n\r\n여기서 `XMLHttpRequest` 는 비동기 웹 기술에 관련된 객체이고(대표적으로 ajax 요청),`fetch`란 쉽게 말해 웹 리소스를 가져오는 고수준 api를 뜻합니다. html의 img태그나 scipt 태그, javascript,css 의 리소스 접근에 관한 일부 api도 Fetch의 구현체입니다.\r\n\r\n**하지만 최근에는 웹이라는 오픈된 환경에서 ajax가 대중화되고, OPEN API 등 <u>다른 출처에 있는 리소스를 가져와 활용하는 일은 매우 흔한 일</u>로 무작정 막을 수는 없습니다. 그래서 몇 가지 예외 조항을 두고 이 조항에 해당하는 리소스 요청은 다른 출처라도 허용하기로 했는데, 그 중 하나가 `CORS 정책을 지킨 리소스 요청` 이죠.**\r\n\r\n\r\n\r\n- 왜 이러한 정책이 만들어 졌을까 ?\r\n\r\n>  출처가 다른 두 개의 어플리케이션이 제약없이 소통할 수 있는 환경이 위험하기 때문이다. 특히 웹 어플리케이션의 경우 브라우저의 개발자 도구만 열어도 어떤 서버와 통신하는지, 리소스의 출처는 어디인지와 같은 각종 정보들을 아무런 제재없이 열람할 수 있다. \r\n\r\n> (최근에는 자바스크립트 소스 코드를 난독화해 읽기 어렵다고는 하지만  난독화는 암호화가 아니므로, 소스 코드를 직접 볼 수 있다는 것 자체가 보안적으로 상당히 취약하다. 다시 복호화하는 사이트도 있음. 상당히 쉽게 파훼가 가능함.)\r\n\r\n이런 환경에서 아무런 제약이 존재하지 않는다면, 악의를 가진 사용자가 소스 코드를 쓱 구경한 후 [CSRF(Cross-Site Request Forgery)](https://ko.wikipedia.org/wiki/사이트_간_요청_위조)나 [XSS(Cross-Site Scripting)](https://ko.wikipedia.org/wiki/사이트_간_스크립팅)와 같은 방법을 사용하여 사용자의 어플리케이션에서 코드가 실행된 것처럼 꾸며서 사용자의 정보를 탈취하기가 너무나도 쉬워지는 문제가 생길 수 있습니다.\r\n\r\n\r\n\r\n- 즉, 우리가 다른 출처로 리소스를 요청하면 SOP 정책을 위반하는 것이고, SOP의 예외 조항인 CORS 정책까지 위반한다면 아예 다른 출처의 리소스를 사용할 수 없게 되는 것이다.\r\n\r\n**결론적으로, 다른 출처로 리소스를 요청하기 위해서는 SOP에서 정의된 예외 조항과 CORS를 사용할 수 있는 케이스를 따라야 한다는 것이다.**\r\n\r\n---\r\n\r\n\r\n\r\n### 1.3 같은 출처와 다른 출처의 구분\r\n\r\n결론부터 말하자면, 두 URL의 구성 요소 중 `Scheme`, `Host`, `Port` 이 3가지만 동일하면 두 개의 출처가 서로 같습니다.\r\n\r\n`https://mensan-sanghun.github.io:80` 이라는 출처로 예를 들자면 `https://` 이라는 스킴에 `mensan-sanghun.github.io` 호스트를 가지고 `:80` 번 포트를 사용하고 있다는 것만 같다면, 나머지는 전부 다르더라도 같은 출처로 판단됩니다.\r\n\r\n\r\n\r\n- 예시(출처가 https://mensan-sanghun.github.io 일 때)\r\n\r\n| URL                                            | 같은 출처 여부 | 이유                        |\r\n| ---------------------------------------------- | -------------- | --------------------------- |\r\n| https://mensan-sanghun.github.io/about         | O              | 스킴, 호스트, 포트가 동일   |\r\n| https://mensan-sanghun.github.io/about?q=상훈  | O              | 스킴, 호스트, 포트가 동일   |\r\n| https://user:password@mensan-sanghun.github.io | O              | 스킴, 호스트, 포트가 동일   |\r\n| http://mensan-sanghun.github.io                | X              | 스킴이 다름                 |\r\n| https://api.github.io                          | X              | 호스트가 다름               |\r\n| https://mensan-sanghun.naver.com               | X              | 호스트가 다름               |\r\n| https://mensan-sanghun.github.io:8000          | ?              | 브라우저의 구현에 따라 다름 |\r\n\r\n맨 마지막 케이스의 경우, 만약 출처에 `https://mensan-sanghun.github.io:80` 처럼 포트 번호가 명시되어 있다면 다른 출처이지만, 예시로 든 출처의 경우 포트 번호가 포함되지 않아 판단하기 애매합니다.\r\n\r\n이런 경우에는 각 브라우저들의 독자적인 출처 비교 로직을 따라갑니다.\r\n\r\n**여기서 중요한 점은, 이렇게 출처를 비교하는 로직이 <u>서버에 구현된게 아니라 브라우저에 구현</u>되어 있는 점입니다.**\r\n\r\n**!그렇기 때문에, 우리가 CORS 정책을 위반하는 리소스 요청을 해도, 해당 서버가 같은 출처에서 보낸 요청만 받는 로직을 가진 경우가 아니라면, 서버는 정상적으로 응답을 하고 이후 브라우저에서는 이 응답을 분석해 CORS 정책 위반이라고 판단하고 그 응답을 사용하지 않고 버립니다. **\r\n\r\n-> 따라서 서버 로그에는 `200 ok `가 뜨지만 브라우저 개발자 도구에는 \"CORS 오류\"가 떠있습니다.\r\n\r\n**즉, CORS는 브라우저의 구현 스펙에 포함되는 정책이기 때문에, 브라우저를 통하지 않고 서버 간 통신을 할 때는 이 정책이 적용되지 않습니다. 또한 CORS 정책을 위반하는 리소스 요청 에러가 발생해도, 서버 쪽 로그에는 정상적으로 응답을 했다는 로그가 남아 혼란을 야기할 수 있습니다.**\r\n\r\n---\r\n\r\n\r\n\r\n## 2. CORS의 동작\r\n\r\n기본적으로 웹 클라이언트 어플리케이션이 다른 출처의 리소스를 요청할 때는 HTTP 프로토콜을 사용하여 요청을 보내게 되는데, 이때 브라우저는 요청 헤더에 `Origin` 이라는 필드에 요청을 보내는 출처를 함께 담습니다\r\n\r\n```http\r\n# http\r\nOrigin: https://mensan-sanghun.github.io\r\n```\r\n\r\n이후 서버가 이 요청에 대한 응답을 할 때 응답 헤더의 `Access-Control-Allow-Origin`이라는 값에 “이 리소스를 접근하는 것이 허용된 출처”를 내려주고, 이후 응답을 받은 브라우저는 자신이 보냈던 요청의 `Origin`과 서버가 보내준 응답의 `Access-Control-Allow-Origin`을 비교해본 후 이 응답이 유효한 응답인지 아닌지를 결정합니다.\r\n\r\n기본적 흐름은 이와 같고, CORS가 동작하는 방식은 세 가지의 시나리오가 있습니다.\r\n\r\n---\r\n\r\n### 2.1 CORS의 시나리오\r\n\r\n> 1. simple request\r\n> 2. preflight request\r\n> 3. credentialed request\r\n\r\n\r\n\r\n#### Simple Request 시나리오를 들어가기 전에\r\n\r\n이 시나리오 케이스에 대한 정식 명칭은 없지만, MDN의 CORS 문서에서는 이 시나리오를 [Simple Request](https://developer.mozilla.org/ko/docs/Web/HTTP/CORS#접근_제어_시나리오_예제)라고 부르고 있습니다.\r\n\r\nSimple Request의 정의에 앞서 CORS Preflight 에 대해 먼저 집고 넘어가는게 이해하기에 좋습니다. \r\n\r\n---\r\n\r\n#### Preflight Request(예비 요청 시나리오)\r\n\r\n`프리플라이트(Preflight)` 방식은 일반적으로 우리가 웹 어플리케이션을 개발할 때 가장 자주 마주치는 시나리오입니다. 이 시나리오에 해당하는 상황일 때 브라우저는 요청을 한번에 보내지 않고 **예비 요청과 본 요청으로 나누어서 서버로 전송**합니다.\r\n\r\n이때 브라우저가 본 요청을 보내기 전에 보내는 예비 요청을 Preflight라고 부르는 것이며, 이 예비 요청에는 HTTP 메소드 중 `OPTIONS` 메소드가 사용됩니다. 예비 요청의 역할은 본 요청을 보내기 전에 브라우저 스스로 이 요청을 보내는 것이 안전한지 확인하는 것입니다.\r\n\r\n자바스크립트를 예를 들어 이 과정을 간단한 플로우 차트로 나타내보면 다음과 같습니다.\r\n\r\n![preflight](/assets/img/Preflight.JPG)\r\n\r\n> 브라우저는 본 요청을 보내기 전 예비 요청을 먼저 보내고, 요청의 유효성을 검사한다.\r\n\r\n자바스크립트의 `fetch API`를 사용하여 브라우저에게 리소스를 받아오라는 명령을 내리면 브라우저는 서버에 예비 요청을 먼저 보내고, 서버는 이 예비 요청에 대한 응답으로 현재 자신이 어떤 것들을 허용하고, 어떤 것들을 금지하고 있는지에 대한 정보를 응답 헤더에 담아 브라우저에게 다시 보내주게 됩니다.\r\n\r\n>  이후 브라우저는 자신이 보낸 예비 요청과 서버가 응답에 담아준 허용 정책을 비교한 후, 이 요청을 보내는 것이 안전하다고 판단되면 같은 엔드포인트로 다시 본 요청을 보내게 된다. 이후 서버가 이 본 요청에 대한 응답을 하면 브라우저는 최종적으로 이 응답 데이터를 자바스크립트에게 넘겨준다.\r\n\r\n\r\n\r\n---\r\n\r\n아래 플로우는 다른 개발자가 재현한 예제를 통해 공부해보았다.\r\n\r\n출처: [CORS는 왜 이렇게 우리를 힘들게 하는걸까?](https://evan-moon.github.io/2020/05/21/about-cors/)\r\n\r\n---\r\n\r\n- 예제\r\n\r\n개발자의 블로그 환경에서 개발자의 티스토리 블로그의 RSS 파일 리소스에 요청을 보내면 브라우저가 본 요청을 보내기 전에 `OPTIONS` 메소드를 사용하여 예비 요청을 보내는 것을 확인할 수 있습니다.\r\n\r\n![preflight_1](/assets/img/Preflight_1.JPG)\r\n\r\n실제로 브라우저가 보낸 요청을 보면, 단순히 `Origin`에 대한 정보 뿐만 아니라 자신이 예비 요청 이후에 보낼 본 요청에 대한 다른 정보들도 함께 포함되어 있는 것을 볼 수 있습니다.\r\n\r\n위 예비 요청에서 브라우저는 `Access-Control-Request-Headers`를 사용하여 자신이 본 요청에서 `Content-Type` 헤더를 사용할 것을 알려주거나, `Access-Control-Request-Method`를 사용하여 이후 `GET` 메소드를 사용할 것을 서버에게 미리 알려주고 있습니다.\r\n\r\n이후, 티스토리 서버는 예비 요청에 대한 응답을 보내줍니다.\r\n\r\n![preflight_2](/assets/img/Preflight_2.JPG)\r\n\r\n여기서 중요하게 볼 것은 `Access-Control-Allow-Origin: https://evanmoon.tistory.com`라는 값입니다.\r\n\r\n티스토리 서버는 이 리소스에 접근이 가능한 출처는 오직 `https://evanmoon.tistory.com` 뿐이라고 브라우저에게 이야기해준 것이고, 개발자가 이 요청을 보낸 출처는 `https://evan-moon.github.io`이므로 **<u>서버가 허용해준 출처와는 다른 출처</u>**입니다.\r\n\r\n결국 브라우저는 이 요청이 CORS 정책을 위반했다고 판단하고 다음과 같은 에러를 보유줍니다.\r\n\r\n![preflight_3](/assets/img/Preflight_3.JPG)\r\n\r\n앞에서 얘기했듯, 위 예비 요청에 대한 응답에서 에러가 발생하지 않고 `200` 이 정상적으로 응답되었는데, 콘솔 창에서는 에러가 표시되는 부분이 많은 개발자를 헷갈리게 합니다.  따라서 중요한 것은 예비 요청의 성공/실패 여부가 아니라 “응답 헤더에 유효한 `Access-Control-Allow-Origin` 값이 존재하는가”입니다. 만약 예비 요청이 실패해서 `200`이 아닌 상태 코드가 내려오더라도 헤더에 저 값이 제대로 들어가있다면 CORS 정책 위반이 아닌 것이죠.\r\n\r\n---\r\n\r\n#### Simple Request(단순 요청 시나리오)\r\n\r\n대부분의 경우 Preflight Request 방식을 사용해 예비 요청과 본 여청을 나누어 보내지만, 예비 요청없이 본 요청만으로 CORS 정책 위반 여부를 검사하기도 합니다.\r\n\r\n이 시나리오는 Preflight Request 시나리오와 전반적인 로직 자체는 같되, 예비 요청의 존재 유무만 다릅니다.\r\n\r\n예비 요청을 보내지 않고 바로 서버에게 본 요청을 보낸 후, 서버가 이에 대한 응답의 헤더에 `Access-Control-Allow-Origin`과 같은 값을 보내주면 그때 브라우저가 CORS 정책 위반 여부를 검사하는 방식입니다.\r\n\r\n![simple](/assets/img/simple.JPG)\r\n\r\n> 단순 요청은 예비 요청없이 바로 본 요청을 보낸다.\r\n\r\n다만 단순 요청은 특정 조건을 만족하는 경우에만 가능하고, 이 조건은 까다로운 편이라 거의 경험하기 힘든 편이다.\r\n\r\n1. 요청의 메소드는 `GET`, `HEAD`, `POST` 중 하나여야 함.\r\n2. `Accept`, `Accept-Language`, `Content-Language`, `Content-Type`, `DPR`, `Downlink`, `Save-Data`, `Viewport-Width`, `Width`를 제외한 헤더를 사용하면 안됨\r\n3. 만약 `Content-Type`를 사용하는 경우에는 `application/x-www-form-urlencoded`, `multipart/form-data`, `text/plain`만 허용\r\n\r\n2번 조건에 명시된 헤더는 매우 기본적인 헤더들이고, `Authorization` 헤더 조차 저 조건에는 포함되지 않습니다. 또한, 대부분의 HTTP API는 `text/xml`이나 `application/json` 컨텐츠 타입을 가지도록 설계되기 때문에 3번 조건을 만족시키기도 매우 어렵습니다.\r\n\r\n---\r\n\r\n#### Credentialed Request(인증된 요청 시나리오)\r\n\r\n이번 시나리오는 CORS의 기본적 방식이라기 보다 **다른 출처 간 통신에서 보안을 좀 더 강화하고 싶을 때 사용하는 방법**입니다.\r\n\r\n기본적으로 브라우저가 제공하는 비동기 리소스 요청 API인 `XMLHttpRequest` 객체나 `fetch API`는 별도의 옵션 없이 브라우저의 쿠키 정보나 인증과 관련된 헤더를 함부로 요청에 담지 않습니다. 이때 요청에 인증과 관련된 정보를 담을 수 있게 해주는 옵션이 바로 `credentials` 옵션입니다.\r\n\r\n이 옵션에 사용할 수 있는 값과 의미는 다음과 같습니다.\r\n\r\n| 옵션 값              | 설명                                            |\r\n| -------------------- | ----------------------------------------------- |\r\n| same-origin (기본값) | 같은 출처 간 요청에만 인증 정보를 담을 수 있다. |\r\n| include              | 모든 요청에 인증 정보를 담을 수 있다.           |\r\n| omit                 | 모든 요청에 인증 정보를 담지 않는다.            |\r\n\r\n만약 `same-origin`이나 `include`와 같은 옵션을 사용하여 리소스 요청에 인증 정보가 포함된다면, 브라우저는 다른 출처의 리소스를 요청할 때 단순히 `Access-Control-Allow-Origin`만 확인하는 것이 아니라 좀 더 빡빡한 검사 조건을 추가하게 됩니다.\r\n\r\n---\r\n\r\n- 예제\r\n\r\n앞선 예제의 개발자의 로컬환경과 블로그를 호스팅하고 있는 Github 서버와의 통신을 통해, 어떤 제약이 추가되었는지 보여주는 예제\r\n\r\n\r\n\r\n개발자의 블로그는 `Allow-Control-Allow-Origin` 값으로 모든 출처를 허용한다는 의미인 `*`가 설정되어있기 때문에, 다른 출처에서 개발자의 블로그로 리소스를 요청할 때 CORS 정책 위반으로 인한 제약을 받지 않습니다.\r\n\r\n그래서 `http://localhost:8000`과 같은 로컬의 개발 환경에서도 `fetch API`를 사용하여 마음대로 리소스를 요청하고, 또 받아올 수 있습니다.\r\n\r\n![credential1](/assets/img/Credentialed_1.JPG)\r\n\r\n구글 크롬 브라우저의 `credentials` 기본 값은 같은 출처 내에서만 인증 정보를 사용하겠다는 `same-origin`이기 때문에, 로컬 환경에서 `https://evan-moon.github.io`로 보내는 리소스 요청에는 당연히 브라우저의 쿠키와 같은 인증 정보가 포함되어 있지 않습니다.\r\n\r\n그렇기 때문에 브라우저는 단순히 `Access-Control-Allow-Origin: *`이라는 값을 보고 “이 요청은 안전하다”라는 결론을 내리는 것이다. 그러나 `credentials` 옵션을 모든 요청에 인증 정보를 포함하겠다는 의미를 가진 `include`로 변경하고 같은 요청을 보내면 이번에는 상황이 조금 달라지게 됩니다.\r\n\r\n![credential2](/assets/img/Credentialed_2.JPG)\r\n\r\n블로그를 호스팅하고 있는 Github 서버는 이번에도 동일한 응답을 보내주었지만, 브라우저의 반응은 다르죠.\r\n\r\n![credential3](/assets/img/Credentialed_3.JPG)\r\n\r\n브라우저는 인증 모드가 `include`일 경우, 모든 요청을 허용한다는 의미의 `*`를 `Access-Control-Allow-Origin` 헤더에 사용하면 안된다고 이야기하고 있습니다.\r\n\r\n이처럼 요청에 인증 정보가 담겨있는 상태에서 다른 출처의 리소스를 요청하게 되면 브라우저는 CORS 정책 위반 여부를 검사하는 룰에 다음 두 가지를 추가하게 됩니다.\r\n\r\n1. `Access-Control-Allow-Origin`에는 `*`를 사용할 수 없으며, 명시적인 URL이어야한다.\r\n\r\n2. 응답 헤더에는 반드시 `Allow-Control-Allow-Credentials: true`가 존재해야한다.\r\n\r\n---\r\n\r\n\r\n\r\n## 3. CORS를 해결할 수 있는 방법\r\n\r\n그렇다면 이 복잡한 정책 CORS를 위반하지 않으려면 어떻게 해야하는건가?\r\n\r\n\r\n\r\n### 3.1 Access-Control-Allow-Origin 세팅하기\r\n\r\nCORS 정책 위반으로 인한 문제를 해결하는 가장 대표적이고 정석적인 방법은, 그냥 서버에서 `Access-Control-Allow-Origin` 헤더에 알맞은 값을 세팅해주는 것입니다. (인터넷을 찾아보면 리버스 프록싱 등 몇 가지 꼼수가 있지만 로컬환경과 실제 서버 환경이 다른 경우 에러가 나기 쉽다. 그러므로 정석대로 하자)\r\n\r\n이때 와일드카드인 `*`을 사용하여 이 헤더를 세팅하게 되면 모든 출처에서 오는 요청을 허용한다는 의미이므로 **보안적으로 심각한 이슈가 발생할 수도 있습니다.**\r\n\r\n그러므로 `Access-Control-Allow-Origin: https://evan.github.io`와 같이 출처를 명시해주도록 합니다.\r\n\r\nSpring, Express, Django와 같이 이름있는 백엔드 프레임워크의 경우에는 모두 CORS 관련 설정을 위한 세팅이나 미들웨어 라이브러리를 제공하고 있으니 세팅 자체가 어렵지는 않을 것입니다.\r\n\r\n\r\n\r\n#### EX)장고에서 적용하기\r\n\r\n먼저 장고 패키지를 설치한다.\r\n\r\n```bash\r\n>>> pip install django-cors-headers\r\n```\r\n\r\n설치가 완료되면, `settings.py`의 `INSTALLED_APP`과 `MIDDLEWARE`에 코드를 입력한다.\r\n\r\n```django\r\nINSTALLED_APPS = [\r\n\t'corsheaders',\r\n]\r\n\r\nMIDDLEWARE = [\r\n\t'corsheaders.middleware.CorsMiddleware',\r\n]\r\n```\r\n\r\n마지막으로 `settings.py`에 아래와 같은 코드를 입력하면 된다. 아래 설정에서 CORS_ORIGIN_ALLOW_ALL=False를 하고 CORS_ORIGIN_WHITELIST를 지운다면 모든 요청을 허용하는 환경(테스트환경으로나 가능)\r\n\r\n```django\r\n##CORS\r\nCORS_ORIGIN_ALLOW_ALL=False\r\nCORS_ORIGIN_WHITELIST = [\r\n\t'google.com',\r\n\t'localhost:8000',\r\n\t'127.0.0.1:9000',\r\n\t'hostname.example.com',\r\n]\r\nCORS_ALLOW_CREDENTIALS = True\r\n\r\nCORS_ALLOW_METHODS = (\r\n    'DELETE',\r\n    'GET',\r\n    'OPTIONS',\r\n    'PATCH',\r\n    'POST',\r\n    'PUT',\r\n)\r\n\r\nCORS_ALLOW_HEADERS = (\r\n    'accept',\r\n    'accept-encoding',\r\n    'authorization',\r\n    'content-type',\r\n    'dnt',\r\n    'origin',\r\n    'user-agent',\r\n    'x-csrftoken',\r\n    'x-requested-with',\r\n)\r\n```\r\n\r\n---\r\n\r\n\r\n\r\nCORS 정책 위반은 브라우저의 구현에서 발생하기 때문에, 프론트엔드 개발자가 이로 인한 문제를 겪는다. 하지만 문제 해결을 위해서는 백엔드 개발자가 서버 어플리케이션의 응답 헤더에 올바른 `Acccess-Control-Allow-Origin`이 내려올 수 있도록 세팅해줘야 합니다.\r\n\r\n그러므로 프론트엔드 개발자로서든, 백엔드 개발자로서든 이 정책위반 문제해결에 대한 지식을 가지고, 꼭 한 번 쯤은 경험해볼 필요가 있다고 생각합니다.\r\n\r\n---\r\n\r\n#### References\r\n\r\n[교차 출처 리소스 공유 MDN](https://developer.mozilla.org/ko/docs/Web/HTTP/CORS)\r\n\r\n[Fetch API](https://developer.mozilla.org/ko/docs/Web/API/Fetch_API)\r\n\r\n[CORS는 왜 이렇게 우리를 힘들게 하는걸까?](https://evan-moon.github.io/2020/05/21/about-cors/)\r\n\r\n[Django-내 로컬 서버에서 외부접속 허용하기](https://velog.io/@devmin/Django-CORS-Setting-basic)\r\n\r\n[Django CORS 설정과 API 연동](https://blog.thereis.xyz/41)\r\n\r\n[교차 출처 리소스 공유 위키피디아](https://ko.wikipedia.org/wiki/%EA%B5%90%EC%B0%A8_%EC%B6%9C%EC%B2%98_%EB%A6%AC%EC%86%8C%EC%8A%A4_%EA%B3%B5%EC%9C%A0#cite_note-6)");

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,